{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/tools/post/post.component.ts","./src/app/tools/post/post.component.html","./src/environments/environment.ts","./src/app/tools/profile/profile.component.ts","./src/app/tools/profile/profile.component.html","./src/app/tools/authenticator/authenticator.component.ts","./src/app/tools/authenticator/authenticator.component.html","./src/app/pages/post-feed/post-feed.component.ts","./src/app/pages/post-feed/post-feed.component.html","./src/app/tools/create-post/create-post.component.ts","./src/app/tools/create-post/create-post.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/email-verification/email-verification.component.ts","./src/app/pages/email-verification/email-verification.component.html","./src/app/app.module.ts","./src/app/tools/reply/reply.component.ts","./src/app/tools/reply/reply.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AuthenticatorComponent } from 'src/app/tools/authenticator/authenticator.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(private loginSheet: MatBottomSheet) { }\n\n  ngOnInit(): void {\n  }\n\n  onGetStartedClick(){\n    this.loginSheet.open(AuthenticatorComponent);\n  }\n\n}\n","<div id=\"home-page\">\n  <div id=\"home-page-landing\">\n    <div id=\"landing-left\">\n      <div id=\"landing-left-content\">\n           <p><img class=\"img2\" src=\"assets/logosoul.png\" alt=\"logo\"></p>\n           <img class=\"img1\" src=\"assets/chu.png\">\n      </div>\n    </div>\n\n    <div id=\"landing-right\">\n      <button (click)=\"onGetStartedClick()\"\n                mat-flat-button color=\"pink\">Bắt đầu sử dụng</button>\n    </div>\n\n\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { PostData } from 'src/app/pages/post-feed/post-feed.component';\nimport { FirebaseTSFirestore } from 'firebasets/firebasetsFirestore/firebaseTSFirestore';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ReplyComponent } from '../reply/reply.component';\n\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  @Input() postData: PostData;\n  creatorName: string;\n  creatorDescription: string;\n  firestore = new FirebaseTSFirestore();\n  likesCount: number = 0;\n  isLiked: boolean = false;\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getCreatorInfo();\n  }\n\n  onReplyClick(){\n    this.dialog.open(ReplyComponent, {data: this.postData.postId});\n  }\n\n  onLikeClick(){\n    if (this.isLiked) {\n      this.likesCount--;\n      this.isLiked = false;\n    } else {\n      this.likesCount++;\n      this.isLiked = true;\n    }\n  }\n\n  getCreatorInfo(){\n    this.firestore.getDocument(\n      {\n        path: [\"Users\", this.postData.creatorId],\n        onComplete: result => {\n          let userDocument = result.data();\n          this.creatorName = userDocument.publicName;\n          this.creatorDescription = userDocument.description;\n        }\n      }\n    )\n  }\n\n}\n","<mat-card>\n  <mat-card-header>\n      <mat-card-title>{{creatorName}}</mat-card-title>\n      <mat-card-subtitle> {{creatorDescription}} </mat-card-subtitle>\n  </mat-card-header>\n\n  <img mat-card-image src=\"{{postData?.imageUrl}}\">\n\n  <mat-card-content>\n      {{postData?.comment}}\n  </mat-card-content>\n\n  <mat-card-actions>\n    <mat-icon (click)=\"onReplyClick()\" class=\"action-item\" color=\"white\">chat_bubble_outline</mat-icon>\n    <!-- <mat-icon class=\"action-item\" color=\"warn\">favorite_border</mat-icon> -->\n    <mat-icon (click)=\"onLikeClick()\" class=\"action-item\" [ngClass]=\"{'liked': isLiked}\">favorite</mat-icon>\n    <span *ngIf=\"likesCount > 0\">{{ likesCount }}</span>\n    <mat-icon class=\"action-item\" color=\"white\">save</mat-icon>\n  </mat-card-actions>\n\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyC8NCfMeQQv5oqfuSVphjXdLtNIZ0QYn_w\",\n    authDomain: \"socialnetworking-90a13.firebaseapp.com\",\n    projectId: \"socialnetworking-90a13\",\n    storageBucket: \"socialnetworking-90a13.appspot.com\",\n    messagingSenderId: \"407750755202\",\n    appId: \"1:407750755202:web:2171a8ad624756d80bc59b\",\n    measurementId: \"G-6MLM1EM015\"\n    }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FirebaseTSFirestore } from 'firebasets/firebasetsFirestore/firebaseTSFirestore'\nimport { FirebaseTSAuth } from 'firebasets/firebasetsAuth/firebaseTSAuth';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  @Input() show: boolean;\n\n  firestore: FirebaseTSFirestore;\n  auth: FirebaseTSAuth;\n\n  constructor() {\n    this.firestore = new FirebaseTSFirestore();\n    this.auth = new FirebaseTSAuth();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onContinueClick(\n    nameInput: HTMLInputElement,\n    descriptionInput: HTMLTextAreaElement) {\n      let name = nameInput.value;\n      let description = descriptionInput.value;\n\n      this.firestore.create(\n      {\n        path: [ \"Users\", this.auth.getAuth().currentUser.uid ],\n        data: {\n          publicName: name,\n          description: description\n        },\n        onComplete: (docId) => {\n          alert(\"Profile Created\");\n          nameInput.value = \"\";\n          descriptionInput.value = \"\";\n        },\n        onFail: (err) => {}\n      });\n  }\n\n}\n","<div id=\"profile\" [ngClass]=\"{'active': show, 'idle': !show}\">\n  <div id=\"profile-content\">\n\n    <input #nameInput placeholder=\"Name\">\n    <textarea #descriptionInput placeholder=\"Description\"></textarea>\n    <button (click)=\"onContinueClick(nameInput, descriptionInput)\" mat-flat-button color=\"warn\">Continue</button>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseTSAuth } from 'firebasets/firebasetsAuth/firebaseTSAuth';\n\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'app-authenticator',\n  templateUrl: './authenticator.component.html',\n  styleUrls: ['./authenticator.component.css']\n})\nexport class AuthenticatorComponent implements OnInit {\n  state = AuthenticatorCompState.LOGIN;\n  firebasetsAuth: FirebaseTSAuth;\n  constructor(private bottomSheetRef: MatBottomSheetRef) {\n    this.firebasetsAuth = new FirebaseTSAuth();\n  }\n\n  ngOnInit(): void {\n  }\n\n  onResetClick(resetEmail: HTMLInputElement){\n    let email = resetEmail.value;\n    if(this.isNotEmpty(email)) {\n      this.firebasetsAuth.sendPasswordResetEmail(\n        {\n          email: email,\n          onComplete: (err) => {  this.bottomSheetRef.dismiss() }\n        }\n      );\n    }\n  }\n\n  onLogin(\n    loginEmail: HTMLInputElement,\n    loginPassword: HTMLInputElement\n  ){\n    let email = loginEmail.value;\n    let password = loginPassword.value;\n\n    if(this.isNotEmpty(email) && this.isNotEmpty(password)){\n      this.firebasetsAuth.signInWith(\n        {\n          email: email,\n          password: password,\n          onComplete: (uc) => { this.bottomSheetRef.dismiss();  },\n          onFail: (err) => { alert(err) }\n        }\n      );\n    }\n  }\n\n  onRegisterClick(\n    registerEmail: HTMLInputElement,\n    registerPassword: HTMLInputElement,\n    registerConfirmPassword: HTMLInputElement\n  ){\n    let email = registerEmail.value;\n    let password = registerPassword.value;\n    let confirmPassword = registerConfirmPassword.value;\n\n    if(this.isNotEmpty(email) && this.isNotEmpty(password) &&\n      this.isNotEmpty(confirmPassword) && this.isAMatch(password, confirmPassword) )\n      {\n        this.firebasetsAuth.createAccountWith(\n          {\n             email: email,\n             password: password,\n             onComplete: (uc) => {\n              this.bottomSheetRef.dismiss();\n             },\n             onFail: (err) => {\n               alert(\"Failed to create the account.\");\n             }\n           });\n     }\n  }\n\n\n  isNotEmpty(text: string){\n    return text != null && text.length > 0;\n  }\n\n  isAMatch(text: string, comparedWith: string){\n    return text == comparedWith;\n  }\n\n  onForgotPasswordClick(){\n    this.state = AuthenticatorCompState.FORGOT_PASSWORD;\n  }\n\n  onCreateAccountClick(){\n    this.state = AuthenticatorCompState.REGISTER;\n  }\n\n  onLoginClick(){\n    this.state = AuthenticatorCompState.LOGIN;\n  }\n\n  isLoginState(){\n    return this.state == AuthenticatorCompState.LOGIN;\n  }\n\n  isRegisterState(){\n    return this.state == AuthenticatorCompState.REGISTER;\n  }\n\n  isForgotPasswordState(){\n    return this.state == AuthenticatorCompState.FORGOT_PASSWORD;\n  }\n  getStateText(){\n    switch(this.state){\n      case AuthenticatorCompState.LOGIN:\n        return \"Đăng nhập\";\n      case AuthenticatorCompState.REGISTER:\n        return \"Đăng ký\";\n      case AuthenticatorCompState.FORGOT_PASSWORD:\n        return \"Quên mật khẩu?\";\n    }\n  }\n}\nexport enum AuthenticatorCompState {\n  LOGIN,\n  REGISTER,\n  FORGOT_PASSWORD\n}\n","<div id=\"authenticator\">\n  <mat-card id=\"authenticator-content\">\n    <mat-card-header>\n      <mat-card-title>{{getStateText()}}</mat-card-title>\n    </mat-card-header>\n\n    <div *ngIf=\"isLoginState()\" >\n      <input #loginEmail placeholder=\"Email\"/>\n      <input #loginPassword placeholder=\"Mật khẩu đăng nhập\" type=\"password\">\n     <button (click)=\"onLogin(loginEmail, loginPassword)\" mat-flat-button color=\"warn\">Đăng Nhập</button>\n    </div>\n\n    <div *ngIf=\"isRegisterState()\">\n      <input #registerEmail placeholder=\"Email\">\n      <input #registerPassword placeholder=\"Mật khẩu\" type=\"password\">\n      <input #registerConfirmPassword placeholder=\"Xác nhận mật khẩu\" type=\"password\">\n      <button (click)=\"onRegisterClick(registerEmail, registerPassword, registerConfirmPassword)\"mat-flat-button color=\"warn\">Tạo tài khoản</button>\n    </div>\n\n    <div *ngIf=\"isForgotPasswordState()\">\n      <input #resetEmail placeholder=\"Email\">\n      <button (click)=\"onResetClick(resetEmail)\" mat-flat-button color=\"warn\">Nhận lại mật khẩu</button>\n   </div>\n\n    <mat-card-actions align=\"end\">\n      <button mat-flat-button\n           (click)=\"onForgotPasswordClick()\">Quên mật khẩu?</button>\n      <button mat-flat-button\n           (click)=\"onCreateAccountClick()\">Tạo tài khoản?</button>\n      <button mat-flat-button\n           (click)=\"onLoginClick()\">Đăng nhập</button>\n    </mat-card-actions>\n\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreatePostComponent } from 'src/app/tools/create-post/create-post.component';\nimport { FirebaseTSFirestore, Limit, OrderBy, Where } from 'firebasets/firebasetsFirestore/firebaseTSFirestore';\n\n@Component({\n  selector: 'app-post-feed',\n  templateUrl: './post-feed.component.html',\n  styleUrls: ['./post-feed.component.css']\n})\nexport class PostFeedComponent implements OnInit {\n  firestore = new FirebaseTSFirestore();\n  posts: PostData [] = [];\n\n\n  constructor(private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.getPosts();\n  }\n\n  onCreatePostClick(){\n    this.dialog.open(CreatePostComponent);\n  }\n\n  getPosts(){\n    this.firestore.getCollection(\n      {\n        path: [\"Posts\"],\n        where:[\n          new OrderBy(\"timestamp\", \"desc\"),\n          new Limit(10)\n        ],\n        onComplete: (result) => {\n          result.docs.forEach(\n            doc => {\n              let post = <PostData>doc.data();\n              post.postId = doc.id;\n              this.posts.push(post);\n            }\n          )\n        },\n        onFail: err => {\n\n        }\n      }\n    );\n  }\n\n}\n\nexport interface PostData {\n  comment: string;\n  creatorId: string;\n  imageUrl: string;\n  postId: string;\n}\n","<div id=\"post-feed\">\n  <app-post *ngFor=\"let post of posts\" [postData]=\"post\"></app-post>\n</div>\n\n<button (click)=\"onCreatePostClick()\" mat-fab color=\"warn\" id=\"post-button\">\n   <mat-icon>add</mat-icon>\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseTSFirestore } from 'firebasets/firebasetsFirestore/firebaseTSFirestore';\nimport { FirebaseTSStorage } from 'firebasets/firebasetsStorage/firebaseTSStorage';\nimport { FirebaseTSApp } from 'firebasets/firebasetsApp/firebaseTSApp';\nimport { FirebaseTSAuth } from 'firebasets/firebasetsAuth/firebaseTSAuth';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit {\n\n  selectedImageFile: File;\n  auth = new FirebaseTSAuth();\n  firestore = new FirebaseTSFirestore();\n  storage = new FirebaseTSStorage();\n\n  constructor(private dialog: MatDialogRef<CreatePostComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  onPostClick(commentInput: HTMLTextAreaElement) {\n    let comment = commentInput.value;\n    if(comment.length <= 0 ) return;\n\n    if(this.selectedImageFile) {\n      this.uploadImagePost(comment);\n    } else {\n      this.uploadPost(comment);\n    }\n\n  }\n\n  uploadImagePost(comment: string){\n    let postId = this.firestore.genDocId();\n    this.storage.upload(\n      {\n        uploadName: \"upload Image Post\",\n        path: [\"Posts\", postId, \"image\"],\n        data: {\n          data: this.selectedImageFile\n        },\n        onComplete: (downloadUrl) => {\n          this.firestore.create(\n            {\n              path: [\"Posts\", postId],\n              data: {\n                comment: comment,\n                creatorId: this.auth.getAuth().currentUser.uid,\n                imageUrl: downloadUrl,\n                timestamp: FirebaseTSApp.getFirestoreTimestamp()\n              },\n              onComplete: (docId) => {\n                this.dialog.close();\n              }\n            }\n          );\n        }\n      }\n    );\n  }\n\n  uploadPost(comment: string){\n    this.firestore.create(\n      {\n        path: [\"Posts\"],\n        data: {\n          comment: comment,\n          creatorId: this.auth.getAuth().currentUser.uid,\n          timestamp: FirebaseTSApp.getFirestoreTimestamp()\n        },\n        onComplete: (docId) => {\n          this.dialog.close();\n        }\n      }\n    );\n  }\n\n  onPhotoSelected(photoSelector: HTMLInputElement) {\n    this.selectedImageFile = photoSelector.files[0];\n    if(!this.selectedImageFile) return;\n    let fileReader = new FileReader();\n    fileReader.readAsDataURL(this.selectedImageFile);\n    fileReader.addEventListener(\n        \"loadend\",\n        ev => {\n          let readableString = fileReader.result.toString();\n          let postPreviewImage = <HTMLImageElement>document.getElementById(\"post-preview-image\");\n          postPreviewImage.src = readableString;\n        }\n      );\n  }\n\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>Create Post</mat-card-title>\n  </mat-card-header>\n  <div>\n    <textarea #commentInput placeholder=\"Type Message...\"></textarea>\n  </div>\n\n  <div *ngIf=\"selectedImageFile\" id=\"post-preview\">\n    <img id=\"post-preview-image\"/>\n  </div>\n\n  <mat-card-actions align=\"end\">\n\n    <button mat-button color=\"warn\">\n      <label for=\"photo-upload\">\n           <input #photoSelector (change)=\"onPhotoSelected(photoSelector)\" id=\"photo-upload\" type=\"file\" accept=\"image/*\"/>\n           <mat-icon>insert_photo</mat-icon>\n      </label>\n  </button>\n\n  <button (click)=\"onPostClick(commentInput)\" mat-flat-button color=\"warn\">Post</button>\n\n  </mat-card-actions>\n</mat-card>\n","import { Component } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AuthenticatorComponent } from './tools/authenticator/authenticator.component';\nimport { FirebaseTSAuth } from 'firebasets/firebasetsAuth/firebaseTSAuth';\nimport { Router } from '@angular/router';\nimport { FirebaseTSFirestore } from 'firebasets/firebasetsFirestore/firebaseTSFirestore';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'socialnetworking';\n  auth = new FirebaseTSAuth();\n  firestore = new FirebaseTSFirestore();\n  userHasProfile = true;\n  private static userDocument: UserDocument ;\n\n  constructor(private loginSheet: MatBottomSheet, private router: Router){\n    this.auth.listenToSignInStateChanges(\n      user => {\n        this.auth.checkSignInState(\n          {\n            whenSignedIn: user => {\n\n            },\n            whenSignedOut: user => {\n              AppComponent.userDocument = null;\n            },\n            whenSignedInAndEmailNotVerified: user => {\n              this.router.navigate([\"emailVerification\"]);\n            },\n            whenSignedInAndEmailVerified: user => {\n              this.getUserProfile();\n            },\n            whenChanged: user => {\n\n            }\n          }\n        );\n      }\n    );\n  }\n\n  public static getUserDocument(){\n    try{\n      return AppComponent.userDocument;\n    } catch(err){\n\n    }\n  }\n\n  getUserName(){\n    return AppComponent.userDocument.publicName;\n  }\n\n  getUserProfile(){\n    this.firestore.listenToDocument(\n      {\n        name: \"Getting Document\",\n        path: [\"Users\", this.auth.getAuth().currentUser.uid],\n        onUpdate: (result) => {\n          AppComponent.userDocument = <UserDocument >result.data();\n          this.userHasProfile = result.exists;\n          AppComponent.userDocument.userId = this.auth.getAuth().currentUser.uid;\n          if(this.userHasProfile) {\n            this.router.navigate([\"postfeed\"]);\n          }\n        }\n      }\n    );\n  }\n\n  onLogoutClick(){\n    this.auth.signOut();\n    this.router.navigate(['/']);\n  }\n\n  loggedIn(){\n    return this.auth.isSignedIn();\n  }\n\n  onLoginClick(){\n    this.loginSheet.open(AuthenticatorComponent);\n\n  }\n}\n\n\nexport interface UserDocument {\n  publicName: string;\n  description: string;\n  userId: string;\n}\n","<div id=\"nav-bar\">\n  <div id=\"nav-bar-content\">\n\n    <div id=\"nav-bar-left\">\n      <div style=\"font-size: 1.5em;\"\n      class=\"nav-bar-items\"><img src=\"assets/logo-white.png\" ></div>\n    </div>\n\n    <div id=\"nav-bar-right\">\n      <div *ngIf=\"!loggedIn()\"(click)=\"onLoginClick()\" class=\"nav-bar-items\">Log in</div>\n      <div *ngIf=\"loggedIn() && userHasProfile\" class=\"nav-bar-items\" >Hello, {{getUserName()}}</div>\n      <div *ngIf=\"loggedIn()\" (click)=\"onLogoutClick()\" class=\"nav-bar-items\" >Log out </div>\n    </div>\n\n\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n\n<app-profile [show]=\"loggedIn() && !userHasProfile\"></app-profile>\n","import { Component, OnInit } from '@angular/core';\nimport { FirebaseTSAuth } from 'firebasets/firebasetsAuth/firebaseTSAuth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-email-verification',\n  templateUrl: './email-verification.component.html',\n  styleUrls: ['./email-verification.component.css']\n})\nexport class EmailVerificationComponent implements OnInit {\n\n  auth = new FirebaseTSAuth();\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    if(\n      this.auth.isSignedIn() && !this.auth.getAuth().currentUser.emailVerified\n    ) {\n        this.auth.sendVerificationEmail();\n      } else {\n        this.router.navigate([\"\"]);\n      }\n  }\n\n  onResendClick(){\n    this.auth.sendVerificationEmail();\n  }\n\n}\n","<div id=\"email-verification\">\n  <h1>Your Email is Not Verified</h1>\n  <button mat-flat-button (click)=\"onResendClick()\">Resend Verification Email</button></div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FirebaseTSApp } from 'firebasets/firebasetsApp/firebaseTSApp';\nimport { environment } from 'src/environments/environment';\nimport { HomeComponent } from './pages/home/home.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatCardModule } from '@angular/material/card';\nimport { AuthenticatorComponent } from './tools/authenticator/authenticator.component';\nimport { EmailVerificationComponent } from './pages/email-verification/email-verification.component';\nimport { ProfileComponent } from './tools/profile/profile.component';\n\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatIconModule } from '@angular/material/icon';\nimport { PostFeedComponent } from './pages/post-feed/post-feed.component';\nimport { CreatePostComponent } from './tools/create-post/create-post.component';\nimport { PostComponent } from './tools/post/post.component';\nimport { ReplyComponent } from './tools/reply/reply.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AuthenticatorComponent,\n    EmailVerificationComponent,\n    ProfileComponent,\n    PostFeedComponent,\n    CreatePostComponent,\n    PostComponent,\n    ReplyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatBottomSheetModule,\n    MatCardModule,\n    MatDialogModule,\n    MatIconModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(){\n    FirebaseTSApp.init( environment.firebaseConfig);\n }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FirebaseTSFirestore, OrderBy } from 'firebasets/firebasetsFirestore/firebaseTSFirestore';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FirebaseTSApp } from 'firebasets/firebasetsApp/firebaseTSApp';\nimport { AppComponent } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-reply',\n  templateUrl: './reply.component.html',\n  styleUrls: ['./reply.component.css']\n})\nexport class ReplyComponent implements OnInit {\n  firestore = new FirebaseTSFirestore();\n  comments: Comment [] = [];\n\n  constructor(@Inject(MAT_DIALOG_DATA) private postId: string) { }\n\n  ngOnInit(): void {\n    this.getComments();\n  }\n\n  isCommentCreator(comment: Comment){\n    try{\n      return comment.creatorId == AppComponent.getUserDocument().userId;\n    } catch(err) {}\n  }\n\n  getComments(){\n    this.firestore.listenToCollection(\n      {\n        name: \"Post Comments\",\n        path: [\"Posts\", this.postId, \"PostComments\"],\n        where: [new OrderBy(\"timestamp\", \"asc\")],\n        onUpdate: (result) => {\n          result.docChanges().forEach(\n            postCommentDoc => {\n              if(postCommentDoc.type == \"added\") {\n                this.comments.unshift(<Comment>postCommentDoc.doc.data());\n              }\n            }\n          )\n        }\n      }\n    );\n  }\n\n  onSendClick(commentInput: HTMLInputElement){\n    if(!(commentInput.value.length > 0)) return;\n    this.firestore.create({\n      path: [\"Posts\", this.postId, \"PostComments\"],\n      data:{\n        comment: commentInput.value,\n        creatorId: AppComponent.getUserDocument().userId,\n        creatorName: AppComponent.getUserDocument().publicName,\n        timestamp:FirebaseTSApp.getFirestoreTimestamp()\n      },\n      onComplete: (docId) => {\n        commentInput.value = \"\";\n      }\n    })\n  }\n\n}\n\nexport interface Comment {\n  creatorId: string;\n  creatorName: string;\n  comment: string;\n  timestamp: firebase.default.firestore.Timestamp\n}\n","<p>Reply</p>\n<div id=\"reply-box\">\n  <div *ngFor=\"let comment of comments\" [ngClass]=\"{'comment-container': true, 'creator-comment-container': isCommentCreator(comment)}\">\n    <div>\n      <p class=\"comment-name\">{{comment?.creatorName}}</p>\n      <p [ngClass]=\"{'comment': true, 'creator-comment': isCommentCreator(comment)}\">{{comment?.comment}}</p>\n    </div>\n  </div>\n</div>\n<div id=\"reply-action-bar\">\n    <button mat-flat-button color=\"warn\" (click)=\"onSendClick(commentInput)\"><mat-icon>send</mat-icon></button>\n    <input placeholder=\"Comment...\" #commentInput>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { EmailVerificationComponent } from './pages/email-verification/email-verification.component';\nimport { PostFeedComponent } from './pages/post-feed/post-feed.component';\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  {path: \"emailVerification\", component: EmailVerificationComponent},\n  {path: \"postfeed\", component: PostFeedComponent},\n  { path: \"**\", component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}